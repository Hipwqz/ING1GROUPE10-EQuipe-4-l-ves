void NouvellePartie() {//sous programme quand on clique sur nouvelle partie

    printf("Choisissez le nombre de joueurs (2 ou 4) : ");
    scanf("%d", &nbJoueurs);

    if (nbJoueurs != 2 && nbJoueurs != 4) {
        printf("Nombre de joueurs invalide. Par defaut, 2 joueurs.\n");//choix du nombre de joeurs et boucle si pour Ã©viter le bug du jeux si le joeur mets autre chose que 2 ou 4 joeurs
        nbJoueurs = 2;
    }

    Plateau();


    int mursParJoueur = (nbJoueurs == 4) ? 5 : MAX_MURS;

    for (int i = 0; i < nbJoueurs; i++) {
        printf("Joueur %d : Voulez-vous jouer contre une IA ? (1 = Oui, 0 = Non) : ", i + 1);//demande de jeux contre une IA
        scanf("%d", &estIA[i]);

        if (estIA[i] == 0) {
            printf("Entrez le pseudo du joueur %d: ", i + 1);
            scanf("%s", nomsJoueurs[i]);
            printf("Choisissez un pion pour %s (un seul caractere): ", nomsJoueurs[i]);//demande des noms et forme des pions des joeurs
            scanf(" %c", &pions[i]);
        } else {
            sprintf(nomsJoueurs[i], "IA%d", i + 1);
            pions[i] = 'I' + i; //attribution automatique du pion pour l'IA
            printf("IA%d joue avec le pion %c\n", i + 1, pions[i]);
        }

        mursRestants[i] = mursParJoueur;

        // Positionnement des pions en fonction du nombre de joueurs
        if (nbJoueurs == 2) {
            // Positionnement standard pour 2 joueurs (haut et bas au centre)
            positionsX[i] = (i == 0) ? 0 : TAILLE_PLATEAU - 1;
            positionsY[i] = TAILLE_PLATEAU / 2;
        } else if (nbJoueurs == 4) {
            // Positionnement pour 4 joueurs (haut, bas, gauche, droite au centre)
            if (i == 0) {
                positionsX[i] = 0;
                positionsY[i] = TAILLE_PLATEAU / 2;
            } else if (i == 1) { // Joueur 2
                positionsX[i] = TAILLE_PLATEAU - 1;
                positionsY[i] = TAILLE_PLATEAU / 2;
            } else if (i == 2) { // Joueur 3
                positionsX[i] = TAILLE_PLATEAU / 2;
                positionsY[i] = 0;
            } else if (i == 3) { // Joueur 4
                positionsX[i] = TAILLE_PLATEAU / 2;
                positionsY[i] = TAILLE_PLATEAU - 1;
            }
        }
        plateau[positionsX[i]][positionsY[i]] = pions[i];//positionnement des pions sur le plaeteau
    }

    int joueurActuel = 0;
    jeuEnCours = 1;

    while (jeuEnCours) {
        affichagePlateau();
        AfficherInfosJoueur(joueurActuel);
        Tour(joueurActuel);

        if (Victoire(joueurActuel)) {
            printf("Felicitations %s ! Vous avez gagne et obtenu 5 points !\n", nomsJoueurs[joueurActuel]);//affichage du message en cas de victoire
            scores[joueurActuel] += 5;
            jeuEnCours = 0;
            Menu();
        }

        joueurActuel = (joueurActuel + 1) % nbJoueurs;
    }
}


// sous porgramme d affichage du plateau
